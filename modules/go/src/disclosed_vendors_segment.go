// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type DisclosedVendorsSegment struct {
	SegmentType uint64
	VendorConsent *DisclosedVendorsSegment_VendorSection
	_io *kaitai.Stream
	_root *DisclosedVendorsSegment
	_parent interface{}
}
func NewDisclosedVendorsSegment() *DisclosedVendorsSegment {
	return &DisclosedVendorsSegment{
	}
}

func (this *DisclosedVendorsSegment) Read(io *kaitai.Stream, parent interface{}, root *DisclosedVendorsSegment) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBitsIntBe(3)
	if err != nil {
		return err
	}
	this.SegmentType = tmp1
	this._io.AlignToByte()
	tmp2 := NewDisclosedVendorsSegment_VendorSection()
	err = tmp2.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.VendorConsent = tmp2
	return err
}
type DisclosedVendorsSegment_VendorSection struct {
	MaxVendorId uint64
	IsRangeEncoding bool
	BitField []bool
	RangeSection *DisclosedVendorsSegment_RangeSection
	_io *kaitai.Stream
	_root *DisclosedVendorsSegment
	_parent *DisclosedVendorsSegment
}
func NewDisclosedVendorsSegment_VendorSection() *DisclosedVendorsSegment_VendorSection {
	return &DisclosedVendorsSegment_VendorSection{
	}
}

func (this *DisclosedVendorsSegment_VendorSection) Read(io *kaitai.Stream, parent *DisclosedVendorsSegment, root *DisclosedVendorsSegment) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp3, err := this._io.ReadBitsIntBe(16)
	if err != nil {
		return err
	}
	this.MaxVendorId = tmp3
	tmp4, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.IsRangeEncoding = tmp4 != 0
	if (!(this.IsRangeEncoding)) {
		for i := 0; i < int(this.MaxVendorId); i++ {
			_ = i
			tmp5, err := this._io.ReadBitsIntBe(1)
			if err != nil {
				return err
			}
			this.BitField = append(this.BitField, tmp5 != 0)
		}
	}
	this._io.AlignToByte()
	if (this.IsRangeEncoding) {
		tmp6 := NewDisclosedVendorsSegment_RangeSection()
		err = tmp6.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.RangeSection = tmp6
	}
	return err
}
type DisclosedVendorsSegment_RangeSection struct {
	NumEntries uint64
	RangeEntries []*DisclosedVendorsSegment_RangeEntry
	_io *kaitai.Stream
	_root *DisclosedVendorsSegment
	_parent *DisclosedVendorsSegment_VendorSection
}
func NewDisclosedVendorsSegment_RangeSection() *DisclosedVendorsSegment_RangeSection {
	return &DisclosedVendorsSegment_RangeSection{
	}
}

func (this *DisclosedVendorsSegment_RangeSection) Read(io *kaitai.Stream, parent *DisclosedVendorsSegment_VendorSection, root *DisclosedVendorsSegment) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp7, err := this._io.ReadBitsIntBe(12)
	if err != nil {
		return err
	}
	this.NumEntries = tmp7
	this._io.AlignToByte()
	for i := 0; i < int(this.NumEntries); i++ {
		_ = i
		tmp8 := NewDisclosedVendorsSegment_RangeEntry()
		err = tmp8.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.RangeEntries = append(this.RangeEntries, tmp8)
	}
	return err
}
type DisclosedVendorsSegment_RangeEntry struct {
	IsARange bool
	StartOrOnlyVendorId uint64
	EndVendorId uint64
	_io *kaitai.Stream
	_root *DisclosedVendorsSegment
	_parent *DisclosedVendorsSegment_RangeSection
}
func NewDisclosedVendorsSegment_RangeEntry() *DisclosedVendorsSegment_RangeEntry {
	return &DisclosedVendorsSegment_RangeEntry{
	}
}

func (this *DisclosedVendorsSegment_RangeEntry) Read(io *kaitai.Stream, parent *DisclosedVendorsSegment_RangeSection, root *DisclosedVendorsSegment) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp9, err := this._io.ReadBitsIntBe(1)
	if err != nil {
		return err
	}
	this.IsARange = tmp9 != 0
	tmp10, err := this._io.ReadBitsIntBe(16)
	if err != nil {
		return err
	}
	this.StartOrOnlyVendorId = tmp10
	if (this.IsARange) {
		tmp11, err := this._io.ReadBitsIntBe(16)
		if err != nil {
			return err
		}
		this.EndVendorId = tmp11
	}
	return err
}
